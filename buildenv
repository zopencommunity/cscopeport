# bump: cscope-version /CSCOPE_VERSION="(.*)"/ https://fossies.org/linux/misc/|re:/cscope-([\d.]+).tar.gz/$1/|semver:*
CSCOPE_VERSION="15.9"
export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_STABLE_URL="https://fossies.org/linux/misc/cscope-${CSCOPE_VERSION}.tar.gz"
export ZOPEN_CATEGORIES="development"
export ZOPEN_STABLE_DEPS="m4 curl tar gzip make flex zoslib ncurses"

export ZOPEN_EXTRA_CONFIGURE_OPTS="--with-ncurses=\$NCURSES_HOME"
export ZOPEN_EXTRA_CPPFLAGS="-I\$NCURSES_HOME/include/ncurses"
export ZOPEN_CHECK="./src/cscope"
export ZOPEN_CHECK_OPTS="-R -b -i cscope.files"
export ZOPEN_COMP=CLANG

zopen_pre_check()
{
  find . -name "*.c" -o -name "*.cpp" -o -name "*.h" -o -name "*.hpp" > cscope.files
  rm -f cscope.out
}

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"
  # Make sure cscope.out is created
  test -s cscope.out
  failures=$?
  echo "actualFailures:$failures"
  echo "totalTests:1"
  echo "expectedFailures:0"
}

zopen_append_to_zoslib_env() {
 cat <<EOF
ASCII_TERMINFO|set|PROJECT_ROOT/../../ncurses/ncurses/share/terminfo/
EOF
}

zopen_get_version()
{
  cscope_version=$(./src/cscope --version 2>&1 | awk 'NR == 1 {gsub(/[^0-9.]/,"",$NF); print $NF}')
  echo $cscope_version
}
